/*
! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

[type='text'],[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  border-radius: 0px;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-shadow: 0 0 #0000;
}

[type='text']:focus, [type='email']:focus, [type='url']:focus, [type='password']:focus, [type='number']:focus, [type='date']:focus, [type='datetime-local']:focus, [type='month']:focus, [type='search']:focus, [type='tel']:focus, [type='time']:focus, [type='week']:focus, [multiple]:focus, textarea:focus, select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  border-color: #2563eb;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  color: #6b7280;
  opacity: 1;
}

input::placeholder,textarea::placeholder {
  color: #6b7280;
  opacity: 1;
}

::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

::-webkit-date-and-time-value {
  min-height: 1.5em;
}

::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field {
  padding-top: 0;
  padding-bottom: 0;
}

select {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
}

[multiple] {
  background-image: initial;
  background-position: initial;
  background-repeat: unset;
  background-size: initial;
  padding-right: 0.75rem;
  -webkit-print-color-adjust: unset;
          print-color-adjust: unset;
}

[type='checkbox'],[type='radio'] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding: 0;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
  display: inline-block;
  vertical-align: middle;
  background-origin: border-box;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-shrink: 0;
  height: 1rem;
  width: 1rem;
  color: #2563eb;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  --tw-shadow: 0 0 #0000;
}

[type='checkbox'] {
  border-radius: 0px;
}

[type='radio'] {
  border-radius: 100%;
}

[type='checkbox']:focus,[type='radio']:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

[type='checkbox']:checked,[type='radio']:checked {
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
}

[type='radio']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
}

[type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='checkbox']:indeterminate {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='file'] {
  background: unset;
  border-color: inherit;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-size: unset;
  line-height: inherit;
}

[type='file']:focus {
  outline: 1px solid ButtonText;
  outline: 1px auto -webkit-focus-ring-color;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

.\!container {
  width: 100% !important;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }

  .\!container {
    max-width: 640px !important;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }

  .\!container {
    max-width: 768px !important;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }

  .\!container {
    max-width: 1024px !important;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }

  .\!container {
    max-width: 1280px !important;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }

  .\!container {
    max-width: 1536px !important;
  }
}

.form-input,.form-textarea,.form-select,.form-multiselect {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  border-radius: 0px;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-shadow: 0 0 #0000;
}

.form-input:focus, .form-textarea:focus, .form-select:focus, .form-multiselect:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  border-color: #2563eb;
}

.form-select {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
}

.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}

.prose :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.visible {
  visibility: visible;
}

.invisible {
  visibility: hidden;
}

.collapse {
  visibility: collapse;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.\!fixed {
  position: fixed !important;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.\!sticky {
  position: sticky !important;
}

.inset-0 {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

.top-5 {
  top: 1.25rem;
}

.top-10 {
  top: 2.5rem;
}

.isolate {
  isolation: isolate;
}

.z-\[0\] {
  z-index: 0;
}

.z-\[1\] {
  z-index: 1;
}

.z-\[200\] {
  z-index: 200;
}

.col-span-1 {
  grid-column: span 1 / span 1;
}

.col-span-2 {
  grid-column: span 2 / span 2;
}

.col-span-3 {
  grid-column: span 3 / span 3;
}

.row-span-1 {
  grid-row: span 1 / span 1;
}

.row-span-2 {
  grid-row: span 2 / span 2;
}

.float-right {
  float: right;
}

.float-left {
  float: left;
}

.m-3 {
  margin: 0.75rem;
}

.m-1 {
  margin: 0.25rem;
}

.m-4 {
  margin: 1rem;
}

.m-0 {
  margin: 0px;
}

.m-10 {
  margin: 2.5rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mx-4 {
  margin-left: 1rem;
  margin-right: 1rem;
}

.my-3 {
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.mx-1 {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}

.mx-3 {
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.my-0 {
  margin-top: 0px;
  margin-bottom: 0px;
}

.my-12 {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mr-auto {
  margin-right: auto;
}

.mr-2 {
  margin-right: 0.5rem;
}

.ml-4 {
  margin-left: 1rem;
}

.mt-\[5vh\] {
  margin-top: 5vh;
}

.mt-\[4vh\] {
  margin-top: 4vh;
}

.mt-5 {
  margin-top: 1.25rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.mt-\[10vh\] {
  margin-top: 10vh;
}

.mt-\[9vh\] {
  margin-top: 9vh;
}

.ml-\[18\%\] {
  margin-left: 18%;
}

.mt-\[-25px\] {
  margin-top: -25px;
}

.ml-\[2vw\] {
  margin-left: 2vw;
}

.ml-\[-1\.4vw\] {
  margin-left: -1.4vw;
}

.mb-0 {
  margin-bottom: 0px;
}

.mb-5 {
  margin-bottom: 1.25rem;
}

.mr-5 {
  margin-right: 1.25rem;
}

.mt-\[-1px\] {
  margin-top: -1px;
}

.mr-\[2px\] {
  margin-right: 2px;
}

.mt-0 {
  margin-top: 0px;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.ml-auto {
  margin-left: auto;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mb-3 {
  margin-bottom: 0.75rem;
}

.mt-\[-7px\] {
  margin-top: -7px;
}

.mb-4 {
  margin-bottom: 1rem;
}

.ml-3 {
  margin-left: 0.75rem;
}

.mt-\[2vh\] {
  margin-top: 2vh;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mr-3 {
  margin-right: 0.75rem;
}

.mt-6 {
  margin-top: 1.5rem;
}

.mt-8 {
  margin-top: 2rem;
}

.ml-5 {
  margin-left: 1.25rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.inline-table {
  display: inline-table;
}

.table-caption {
  display: table-caption;
}

.table-cell {
  display: table-cell;
}

.table-column {
  display: table-column;
}

.table-column-group {
  display: table-column-group;
}

.table-footer-group {
  display: table-footer-group;
}

.table-header-group {
  display: table-header-group;
}

.table-row-group {
  display: table-row-group;
}

.table-row {
  display: table-row;
}

.flow-root {
  display: flow-root;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.list-item {
  display: list-item;
}

.hidden {
  display: none;
}

.\!hidden {
  display: none !important;
}

.h-screen {
  height: 100vh;
}

.h-\[240px\] {
  height: 240px;
}

.h-\[30vh\] {
  height: 30vh;
}

.h-\[700px\] {
  height: 700px;
}

.h-\[100vh\] {
  height: 100vh;
}

.h-\[50vh\] {
  height: 50vh;
}

.h-\[20px\] {
  height: 20px;
}

.h-\[15px\] {
  height: 15px;
}

.h-full {
  height: 100%;
}

.h-\[40vh\] {
  height: 40vh;
}

.h-12 {
  height: 3rem;
}

.h-1 {
  height: 0.25rem;
}

.h-11 {
  height: 2.75rem;
}

.h-auto {
  height: auto;
}

.min-h-screen {
  min-height: 100vh;
}

.min-h-\[240px\] {
  min-height: 240px;
}

.min-h-full {
  min-height: 100%;
}

.w-full {
  width: 100%;
}

.w-\[570px\] {
  width: 570px;
}

.w-\[499px\] {
  width: 499px;
}

.w-\[40px\] {
  width: 40px;
}

.w-\[60px\] {
  width: 60px;
}

.w-\[95\%\] {
  width: 95%;
}

.w-screen {
  width: 100vw;
}

.w-auto {
  width: auto;
}

.w-0 {
  width: 0px;
}

.max-w-sm {
  max-width: 24rem;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-shrink {
  flex-shrink: 1;
}

.shrink {
  flex-shrink: 1;
}

.flex-grow {
  flex-grow: 1;
}

.grow {
  flex-grow: 1;
}

.border-collapse {
  border-collapse: collapse;
}

.translate-y-\[10px\] {
  --tw-translate-y: 10px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[-2vw\] {
  --tw-translate-x: -2vw;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[-10px\] {
  --tw-translate-y: -10px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[-2px\] {
  --tw-translate-y: -2px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.select-all {
  -webkit-user-select: all;
     -moz-user-select: all;
          user-select: all;
}

.resize {
  resize: both;
}

.columns-1 {
  -moz-columns: 1;
       columns: 1;
}

.grid-flow-row {
  grid-auto-flow: row;
}

.grid-flow-col {
  grid-auto-flow: column;
}

.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.grid-cols-\[45fr_55fr\] {
  grid-template-columns: 45fr 55fr;
}

.grid-cols-\[100px_90fr\] {
  grid-template-columns: 100px 90fr;
}

.grid-rows-4 {
  grid-template-rows: repeat(4, minmax(0, 1fr));
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.place-items-center {
  place-items: center;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-x-4 {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

.gap-x-2 {
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}

.overflow-hidden {
  overflow: hidden;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.break-all {
  word-break: break-all;
}

.rounded-\[20px\] {
  border-radius: 20px;
}

.rounded-\[29px\] {
  border-radius: 29px;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded {
  border-radius: 0.25rem;
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-\[rgba\(0\2c 0\2c 0\2c 0\.5\)\] {
  border-color: rgba(0,0,0,0.5);
}

.border-\[rgba\(200\2c 200\2c 200\2c 0\.5\)\] {
  border-color: rgba(200,200,200,0.5);
}

.border-black {
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
}

.border-transparent {
  border-color: transparent;
}

.bg-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

.bg-green-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(240 253 244 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-\[\#F4F4F4\] {
  --tw-bg-opacity: 1;
  background-color: rgb(244 244 244 / var(--tw-bg-opacity));
}

.bg-\[\#FF8A00\] {
  --tw-bg-opacity: 1;
  background-color: rgb(255 138 0 / var(--tw-bg-opacity));
}

.bg-\[\#ffffff\] {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-\[rgba\(200\2c 200\2c 200\2c 0\.2\)\] {
  background-color: rgba(200,200,200,0.2);
}

.bg-\[rgba\(255\2c 255\2c 255\2c 0\.9\)\] {
  background-color: rgba(255,255,255,0.9);
}

.bg-\[rgba\(255\2c 255\2c 255\2c 0\.7\)\] {
  background-color: rgba(255,255,255,0.7);
}

.bg-transparent {
  background-color: transparent;
}

.bg-\[rgba\(255\2c 255\2c 255\2c 0\.8\)\] {
  background-color: rgba(255,255,255,0.8);
}

.bg-\[\#ff880000\] {
  background-color: #ff880000;
}

.bg-\[rgba\(142\2c 142\2c 142\2c 0\.5\)\] {
  background-color: rgba(142,142,142,0.5);
}

.bg-gray-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(156 163 175 / var(--tw-bg-opacity));
}

.bg-indigo-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(79 70 229 / var(--tw-bg-opacity));
}

.bg-center {
  background-position: center;
}

.p-\[10px\] {
  padding: 10px;
}

.p-5 {
  padding: 1.25rem;
}

.p-10 {
  padding: 2.5rem;
}

.p-3 {
  padding: 0.75rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-4 {
  padding: 1rem;
}

.p-1 {
  padding: 0.25rem;
}

.p-\[0\.7vw\] {
  padding: 0.7vw;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.px-\[4vw\] {
  padding-left: 4vw;
  padding-right: 4vw;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.pb-1 {
  padding-bottom: 0.25rem;
}

.pb-2 {
  padding-bottom: 0.5rem;
}

.pb-\[5vh\] {
  padding-bottom: 5vh;
}

.pt-3 {
  padding-top: 0.75rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pt-2 {
  padding-top: 0.5rem;
}

.pt-6 {
  padding-top: 1.5rem;
}

.pb-3 {
  padding-bottom: 0.75rem;
}

.text-center {
  text-align: center;
}

.font-serif {
  font-family: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
}

.font-sans {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

.text-5xl {
  font-size: 3rem;
  line-height: 1;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.text-\[82px\] {
  font-size: 82px;
}

.text-\[18px\] {
  font-size: 18px;
}

.text-\[66px\] {
  font-size: 66px;
}

.text-\[200px\] {
  font-size: 200px;
}

.text-\[10px\] {
  font-size: 10px;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-\[48px\] {
  font-size: 48px;
}

.text-\[13px\] {
  font-size: 13px;
}

.text-\[25px\] {
  font-size: 25px;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.font-bold {
  font-weight: 700;
}

.font-normal {
  font-weight: 400;
}

.font-semibold {
  font-weight: 600;
}

.font-medium {
  font-weight: 500;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.capitalize {
  text-transform: capitalize;
}

.italic {
  font-style: italic;
}

.ordinal {
  --tw-ordinal: ordinal;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.slashed-zero {
  --tw-slashed-zero: slashed-zero;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.lining-nums {
  --tw-numeric-figure: lining-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.oldstyle-nums {
  --tw-numeric-figure: oldstyle-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.proportional-nums {
  --tw-numeric-spacing: proportional-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.diagonal-fractions {
  --tw-numeric-fraction: diagonal-fractions;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.stacked-fractions {
  --tw-numeric-fraction: stacked-fractions;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.leading-normal {
  line-height: 1.5;
}

.leading-\[1\] {
  line-height: 1;
}

.leading-\[0\] {
  line-height: 0;
}

.tracking-normal {
  letter-spacing: 0em;
}

.tracking-\[-2px\] {
  letter-spacing: -2px;
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.text-\[\#FF9214\] {
  --tw-text-opacity: 1;
  color: rgb(255 146 20 / var(--tw-text-opacity));
}

.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

.underline {
  text-decoration-line: underline;
}

.overline {
  text-decoration-line: overline;
}

.line-through {
  text-decoration-line: line-through;
}

.no-underline {
  text-decoration-line: none;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.opacity-80 {
  opacity: 0.8;
}

.mix-blend-multiply {
  mix-blend-mode: multiply;
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}

.ring {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.\!invert {
  --tw-invert: invert(100%) !important;
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}

.saturate-0 {
  --tw-saturate: saturate(0);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.sepia {
  --tw-sepia: sepia(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.\!filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}

.backdrop-blur-md {
  --tw-backdrop-blur: blur(12px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-75 {
  transition-duration: 75ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.white {
  color: white !important;
}

.sidebarItemActive {
  background: rgba(255, 136, 0, 0.324);
  border: 1px solid rgba(255, 138, 0, 0.3);
  box-shadow: 0px 0px 33px -8px rgba(255, 138, 0, 0.46);
  border-radius: 12px;
  padding: 5px;
  text-decoration:none;
}

.sidebarItem {
  padding: 5px;
  border-radius: 12px;
  border: 1px solid rgba(255, 138, 0, 0);
  transition: 150ms ease-in-out;
}

a, a:visited, a:hover {
  color: inherit;
}

.navigatorBlock {
  padding: 20px;
  padding-left: 25px;
  text-align: left;
  line-height:1;
  cursor: pointer;
  -webkit-backdrop-filter: blur(20px);
          backdrop-filter: blur(20px);
  border-radius: 29px;
  border: 1px solid rgba(255, 255, 255, 0);
}

.navigatorBlock:hover {
  border: 1px solid rgb(162, 162, 162);
  opacity:0.9;
}

.navigatorBlock .title {
  font-style: normal;
  font-weight: 600;
  font-size: 24px;
  /* identical to box height */
  letter-spacing: -0.04em;
}

.navigatorBlock .subtitle {
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  opacity:0.7;
}

.dropdownBlock {
  padding: 20px;
  padding-left: 25px;
  text-align: left;
  line-height:1;
  border-radius: 29px;
  border: 1px solid rgba(255, 255, 255, 0);
}

.dropdownBlock:hover {
  border: 1px solid rgb(165, 165, 165);
  opacity:0.9;
}

.dropdownBlock .title {
  font-style: normal;
  font-weight: 300;
  font-size: 24px;
  /* identical to box height */
  letter-spacing: -0.04em;
}

.dropdownBlock .subtitle {
  font-style: normal;
  font-weight: 400;
  font-size: 14px;
  margin-top: -5px;
  color: #FFFFFF;
}

* {
  font-family: sans-serif;
}

.chart line{
  stroke: rgba(105, 105, 105, 0.327) !important;
}

.\[contents_end\:contents_end\+2\] {
  contents_end: contents end+2;
}

.\[start\:pointer\] {
  start: pointer;
}

.\[pointer\:contents_end-len\(trailer\)\] {
  pointer: contents end-len(trailer);
}

.\[start\:start\+length\] {
  start: start+length;
}

.\[_start\:\+_end\+1\] {
  _start: + end+1;
}

.\[endpos\:i\] {
  endpos: i;
}

.\[endpos\:semicolon\+1\] {
  endpos: semicolon+1;
}

.\[p\:p\+3\] {
  p: p+3;
}

.\[i\:i\+1\] {
  i: i+1;
}

.\[prev\:curr\] {
  prev: curr;
}

.\[cur\:space\] {
  cur: space;
}

.\[-2\:space\] {
  -2: space;
}

.\[j\:chunk_end\] {
  j: chunk end;
}

.\[start\:end\] {
  start: end;
}

.\[month-1\:month\+1\] {
  month-1: month+1;
}

.\[fr\:to\] {
  fr: to;
}

.\[oldPosition\:self\.data\.position\] {
  old-position: self.data.position;
}

.\[ind0\:ind1\] {
  ind0: ind1;
}

.\[i0\:None\] {
  i0: None;
}

.\[i0\:i1\] {
  i0: i1;
}

.\[i-1\:j\] {
  i-1: j;
}

.\[idx0\:idx1\+1\] {
  idx0: idx1+1;
}

.\[idx0\:idx1\] {
  idx0: idx1;
}

.\[pos\:pos\+n\] {
  pos: pos+n;
}

.\[start\:pos\] {
  start: pos;
}

.\[len1\:idx1\] {
  len1: idx1;
}

.\[init_pos\:token\.endpos\(\)\] {
  init_pos: token.endpos();
}

.\[pos0\:pos1\] {
  pos0: pos1;
}

.\[cert_start\:cert_end\] {
  cert_start: cert end;
}

.\[b\:e\] {
  b: e;
}

.\[lastE\:s\] {
  last-e: s;
}

.\[last\:s\] {
  last: s;
}

.\[loc\:maxloc\] {
  loc: maxloc;
}

.\[start\:loc\] {
  start: loc;
}

.\[loc\:newloc\] {
  loc: newloc;
}

.\[startloc\:loc\] {
  startloc: loc;
}

.\[position\:position\] {
  position: position;
}

.\[i\:j\] {
  i: j;
}

.\[tzname_offset\:nul\] {
  tzname_offset: nul;
}

.\[-7\:-4\] {
  -7: -4;
}

.\[start_idx\:end_idx\] {
  start_idx: end idx;
}

.\[i\:i\+2\] {
  i: i+2;
}

.\[token_start_pos\:pos\] {
  token_start_pos: pos;
}

.\[start_pos\:pos\] {
  start_pos: pos;
}

.\[start\:stop\] {
  start: stop;
}

.\[start\:j\] {
  start: j;
}

.\[lineStartPos\:i\] {
  line-start-pos: i;
}

.\[a\:b\] {
  a: b;
}

.\[i\:i\+4\] {
  i: i+4;
}

.\[i\:i\+atom_len\] {
  i: i+atom len;
}

.\[pos\:chunk_pos\] {
  pos: chunk pos;
}

.\[idx\:idx\+_maxRefPerRecord\] {
  idx: idx+ maxRefPerRecord;
}

.\[pos\:pos\+1\] {
  pos: pos+1;
}

.\[bottom\:top\] {
  bottom: top;
}

.\[upto\:start\] {
  upto: start;
}

.\[end\:next\] {
  end: next;
}

.\[upto\:next\] {
  upto: next;
}

.\[top\:bottom\] {
  top: bottom;
}

.\[last\:pos\] {
  last: pos;
}

.\[lower_bound\:lineno\] {
  lower_bound: lineno;
}

.\[i\:i\+n\] {
  i: i+n;
}

.\[idx-2\:idx\] {
  idx-2: idx;
}

.\[lbound\:ubound\] {
  lbound: ubound;
}

.\[index\:index\+2\] {
  index: index+2;
}

.\[index\:index\+4\] {
  index: index+4;
}

.\[tuplei\:next_ti\] {
  tuplei: next ti;
}

.\[i\:i\+6\] {
  i: i+6;
}

.\[index\:newIndex\] {
  index: newIndex;
}

.\[j\:j\+8\] {
  j: j+8;
}

.\[masterOffset\:masterOffset\+numDeltas\] {
  master-offset: masterOffset+numDeltas;
}

.\[pos\:nextpos\] {
  pos: nextpos;
}

.\[i\:i\+linelength\] {
  i: i+linelength;
}

.\[j\:j\+chunksize\] {
  j: j+chunksize;
}

.\[i\:i\+blockSize\] {
  i: i+blockSize;
}

.\[lo\:i\] {
  lo: i;
}

.\[i\:hi\] {
  i: hi;
}

.\[i1\:i2\] {
  i1: i2;
}

.\[start\:end\+1\] {
  start: end+1;
}

.\[i\:i\+len\(varIdxes\)\] {
  i: i+len(varIdxes);
}

.\[last_i\:end_args\] {
  last_i: end args;
}

.\[start\:self\.pos_\] {
  start: self.pos;
}

.\[j\:j\+1\] {
  j: j+1;
}

.\[j\:j\+2\] {
  j: j+2;
}

.\[i\:i\+3\] {
  i: i+3;
}

.\[j\:j\+4\] {
  j: j+4;
}

.\[declstartpos\:declstartpos\+20\] {
  declstartpos: declstartpos+20;
}

.\[startpos\:startpos\+n\] {
  startpos: startpos+n;
}

.\[j1\:j2\] {
  j1: j2;
}

.\[index\:index\+1\] {
  index: index+1;
}

.\[first_element_idx\:last_element_idx\+1\] {
  first_element_idx: last element idx+1;
}

.\[im1\:idx\+1\] {
  im1: idx+1;
}

.\[index\:index\] {
  index: index;
}

.\[ii0\:ii1\] {
  ii0: ii1;
}

.\[lasti\:i\] {
  lasti: i;
}

.\[window_len-1\:-window_len\+1\] {
  window_len-1: -window len+1;
}

.\[first_color\:last_color\] {
  first_color: last color;
}

.\[maxind-5\:maxind\+5\] {
  maxind-5: maxind+5;
}

.\[pos0-len0\:pos1-len0\] {
  pos0-len0: pos1-len0;
}

.\[indmin\:indmax\] {
  indmin: indmax;
}

.\[ns\:i\+1\] {
  ns: i+1;
}

.\[start_pos\:end_pos\] {
  start_pos: end pos;
}

.\[oldend\:sub\[0\]\] {
  oldend: sub[0];
}

.\[i\:i\+7\] {
  i: i+7;
}

.\[-2\:-1\] {
  -2: -1;
}

.\[i\:i\+read_count\] {
  i: i+read count;
}

.\[first\:last\] {
  first: last;
}

.\[i\:i\+BLOCK\] {
  i: i+BLOCK;
}

.\[k1\:k2\] {
  k1: k2;
}

.\[k\:k\+n\+1\] {
  k: k+n+1;
}

.\[n\:span\[0\]\] {
  n: span[0];
}

.\[st\:end\] {
  st: end;
}

.\[i\:i\+lc2\] {
  i: i+lc2;
}

.\[j\:j\+lc2\] {
  j: j+lc2;
}

.\[prime1_offset\:prime2_offset\] {
  prime1_offset: prime2 offset;
}

.\[prime2_offset\:exponent1_offset\] {
  prime2_offset: exponent1 offset;
}

.\[exponent1_offset\:exponent2_offset\] {
  exponent1_offset: exponent2 offset;
}

.\[exponent2_offset\:coefficient_offset\] {
  exponent2_offset: coefficient offset;
}

.\[coefficient_offset\:private_exponent_offset\] {
  coefficient_offset: private exponent offset;
}

.\[g_offset\:public_offset\] {
  g_offset: public offset;
}

.\[q_offset\:p_offset\] {
  q_offset: p offset;
}

.\[p_offset\:g_offset\] {
  p_offset: g offset;
}

.\[public_offset\:private_offset\] {
  public_offset: private offset;
}

.\[current\:stop\] {
  current: stop;
}

.\[start_i\:end_i\] {
  start_i: end i;
}

.\[i\:j\+tokcount\] {
  i: j+tokcount;
}

.\[parse_start\:parse_end\] {
  parse_start: parse end;
}

.\[parseopt_notrack_start\:parseopt_notrack_end\] {
  parseopt_notrack_start: parseopt notrack end;
}

.\[parseopt_start\:parseopt_end\] {
  parseopt_start: parseopt end;
}

.\[o-rowb\:o\] {
  o-rowb: o;
}

.\[i\:i\] {
  i: i;
}

.\[f\:l\] {
  f: l;
}

.\[pos\:pc\] {
  pos: pc;
}

.\[tstart\:tend\] {
  tstart: tend;
}

.\[pos\:nc\] {
  pos: nc;
}

.\[-8\:-2\] {
  -8: -2;
}

.\[-4\:-2\] {
  -4: -2;
}

.\[-6\:-4\] {
  -6: -4;
}

.\[-8\:-4\] {
  -8: -4;
}

.\[i0\:il\] {
  i0: il;
}

.\[cursor\:cursor\+20\] {
  cursor: cursor+20;
}

.\[past\:past\+le\] {
  past: past+le;
}

.\[firstbracket\:firstbracket\+2\] {
  firstbracket: firstbracket+2;
}

.\[firstbracket\:firstbracket\+9\] {
  firstbracket: firstbracket+9;
}

.\[firstbracket\:firstbracket\+4\] {
  firstbracket: firstbracket+4;
}

.\[pastfirstbracket\:closebracket\] {
  pastfirstbracket: closebracket;
}

.\[firstbracket\:firstbracket\+20\] {
  firstbracket: firstbracket+20;
}

.\[cursor\:cursor\+10\] {
  cursor: cursor+10;
}

.\[nextopenbracket\:nextopenbracket\+20\] {
  nextopenbracket: nextopenbracket+20;
}

.\[cursor\:nextopenbracket\] {
  cursor: nextopenbracket;
}

.\[j\:i\] {
  j: i;
}

.\[transparency\:transparency\+3\] {
  transparency: transparency+3;
}

.\[i\:i\+chunkSize\] {
  i: i+chunkSize;
}

.\[pos\:pos\+columns\] {
  pos: pos+columns;
}

.\[pos\:pos\+length\] {
  pos: pos+length;
}

.\[glyphPos\:glyphPos\+glyphLen\] {
  glyph-pos: glyphPos+glyphLen;
}

.\[-7\:-1\] {
  -7: -1;
}

.\[cursorcount\:cursorcount\+20\] {
  cursorcount: cursorcount+20;
}

.\[sFW\:sFWN\] {
  s-f-w: sFWN;
}

.\[nmw\:nmw\+1\] {
  nmw: nmw+1;
}

.\[sc\:ec\+2\] {
  sc: ec+2;
}

.\[sr\:er\+1\] {
  sr: er+1;
}

.\[sr\:er\+2\] {
  sr: er+2;
}

.\[sc\:ec\+1\] {
  sc: ec+1;
}

.\[hi\:n\] {
  hi: n;
}

.\[span_sr\:n\] {
  span_sr: n;
}

.\[pos\:i\] {
  pos: i;
}

.\[start\:self\._l\] {
  start: self. l;
}

.\[start\:self\._l\+1\] {
  start: self. l+1;
}

.\[i\:len\(doc\)-j\] {
  i: len(doc)-j;
}

.\[p\:p\] {
  p: p;
}

.\[length\:resume_index\] {
  length: resume index;
}

.\[start_word\:stop_word\] {
  start_word: stop word;
}

.\[-1\:-1\] {
  -1: -1;
}

.\[prev_end\:start\] {
  prev_end: start;
}

.\[model_fields_start\:model_fields_end\] {
  model_fields_start: model fields end;
}

.\[cols_start\:cols_end\] {
  cols_start: cols end;
}

.\[j\:k\] {
  j: k;
}

.\[ppos\:ppos\+4\] {
  ppos: ppos+4;
}

.\[pos\:pos\+12\] {
  pos: pos+12;
}

.\[bitLoc\:bitLoc\+8\] {
  bit-loc: bitLoc+8;
}

.\[i\:i\+16\] {
  i: i+16;
}

.\[i\:i\+12\] {
  i: i+12;
}

.\[i\:i\+8\] {
  i: i+8;
}

.\[i\:i\+indexSubTableArraySize\] {
  i: i+indexSubTableArraySize;
}

.\[i\:i\+indexSubHeaderSize\] {
  i: i+indexSubHeaderSize;
}

.\[pos\:endPos\] {
  pos: endPos;
}

.\[s\:e\] {
  s: e;
}

.\[pos\:newpos\] {
  pos: newpos;
}

.\[n1\:regionCount\] {
  n1: regionCount;
}

.\[pc\:pc\+1\] {
  pc: pc+1;
}

.\[x\:x\+4\] {
  x: x+4;
}

.\[pos-5\:pos\+15\] {
  pos-5: pos+15;
}

.\[pos\:pos\+15\] {
  pos: pos+15;
}

.\[nWords\:nWords\+nBytes\] {
  n-words: nWords+nBytes;
}

.\[pos\:pos\+pointsSize\] {
  pos: pos+pointsSize;
}

.\[offset\:offset\+64\] {
  offset: offset+64;
}

.\[offset\:pos\] {
  offset: pos;
}

.\[pos\:pos\+deltasSize\] {
  pos: pos+deltasSize;
}

.\[pos\:pos\+4\] {
  pos: pos+4;
}

.\[textOffset\:textOffset\+textLength\] {
  text-offset: textOffset+textLength;
}

.\[offset\:offset\+4\] {
  offset: offset+4;
}

.\[offset\:offset\+8\] {
  offset: offset+8;
}

.\[offset\:offset\+6\] {
  offset: offset+6;
}

.\[offset\:offset\+int\(length\)\] {
  offset: offset+int(length);
}

.\[startOffset\:startOffset\+4\] {
  start-offset: startOffset+4;
}

.\[startOffset\:startOffset\+5\] {
  start-offset: startOffset+5;
}

.\[pos\:pos\+axisSize\] {
  pos: pos+axisSize;
}

.\[pos\:pos\+instanceSize\] {
  pos: pos+instanceSize;
}

.\[pos\:nextPos\] {
  pos: nextPos;
}

.\[pos\:pos\+2\] {
  pos: pos+2;
}

.\[pos\:pos\+xDataLen\] {
  pos: pos+xDataLen;
}

.\[offset\:offset\+length\] {
  offset: offset+length;
}

.\[index\:index\+length\] {
  index: index+length;
}

.\[current_offset\:current_offset\+sbixStrikeOffsetFormatSize\] {
  current_offset: current offset+sbixStrikeOffsetFormatSize;
}

.\[offset\:offset\+TRACK_DATA_FORMAT_SIZE\] {
  offset: offset+TRACK DATA FORMAT SIZE;
}

.\[sizeTableOffset\:sizeTableOffset\+SIZE_VALUE_FORMAT_SIZE\] {
  size-table-offset: sizeTableOffset+SIZE VALUE FORMAT SIZE;
}

.\[offset\:offset\+TRACK_TABLE_ENTRY_FORMAT_SIZE\] {
  offset: offset+TRACK TABLE ENTRY FORMAT SIZE;
}

.\[perSizeOffset\:perSizeOffset\+PER_SIZE_VALUE_FORMAT_SIZE\] {
  per-size-offset: perSizeOffset+PER SIZE VALUE FORMAT SIZE;
}

.\[i\:k\] {
  i: k;
}

.\[i\:n\] {
  i: n;
}

.\[i\:i\+9\] {
  i: i+9;
}

.\[i\:endpos\] {
  i: endpos;
}

.\[k\:endpos\] {
  k: endpos;
}

.\[i\:gtpos\] {
  i: gtpos;
}

.\[-\:Tt\] {
  -: Tt;
}

.\[start\:delim\] {
  start: delim;
}

.\[i-1\:i\+1\] {
  i-1: i+1;
}

.\[here\:start\] {
  here: start;
}

.\[end\:end\+1\] {
  end: end+1;
}

.\[ellipsis_pos\:ellipsis_pos\+1\] {
  ellipsis_pos: ellipsis pos+1;
}

.\[ax\:ax\+indx\.ndim\] {
  ax: ax+indx.ndim;
}

.\[k\:k\+n\] {
  k: k+n;
}

.\[prev\:k\] {
  prev: k;
}

.\[offset_items\:offset_items\+count_items\] {
  offset_items: offset items+count items;
}

.\[offset\:offset\+N\*d\.nbytes\] {
  offset: offset+N*d.nbytes;
}

.\[s\:s\+8\] {
  s: s+8;
}

.\[s\:s\+4\] {
  s: s+4;
}

.\[val1\:val2\] {
  val1: val2;
}

.\[idx\:idx\] {
  idx: idx;
}

.\[string_start\:string_end\] {
  string_start: string end;
}

.\[start\:edge\] {
  start: edge;
}

.\[-5\:-2\] {
  -5: -2;
}

.\[six\:eix\] {
  six: eix;
}

.\[t_1\:t_2\] {
  t_1: t 2;
}

.\[start\:\"2022\"\] {
  start: "2022";
}

.\[value\:\"third\"\] {
  value: "third";
}

.\[d1\:d2\] {
  d1: d2;
}

.\[-6\:-1\] {
  -6: -1;
}

.\[middle\:end\] {
  middle: end;
}

.\[user\:passwd\@\] {
  user: passwd@;
}

.\[left\:right\] {
  left: right;
}

.\[inherit_ndx\:inherit_ndx\+1\] {
  inherit_ndx: inherit ndx+1;
}

.\[position\:start\] {
  position: start;
}

.\[line_offset\:end_line\] {
  line_offset: end line;
}

.\[position\:offset\] {
  position: offset;
}

.\[offset\:next_offset\] {
  offset: next offset;
}

.\[pos\:new_pos\] {
  pos: new pos;
}

.\[pos\:end_pos\] {
  pos: end pos;
}

.\[cluster\:next_cluster\] {
  cluster: next cluster;
}

.\[sig_end\:eof\] {
  sig_end: eof;
}

.\[startpos\:i\+1\] {
  startpos: i+1;
}

.\[j\:j\+bpp\] {
  j: j+bpp;
}

.\[r_offset\:rows\+r_offset\] {
  r_offset: rows+r offset;
}

.\[i\:i\+self\.row_regions\] {
  i: i+self.row regions;
}

.\[col-2\:col\+3\] {
  col-2: col+3;
}

.\[offset\:offset\+dcCount\] {
  offset: offset+dcCount;
}

.\[j\:j\+patternlen\] {
  j: j+patternlen;
}

.\[x\:x\+2\] {
  x: x+2;
}

.\[b\:l\] {
  b: l;
}

.\[p1\:p2\] {
  p1: p2;
}

.\[ofs\:mlen\] {
  ofs: mlen;
}

.\[-5\:-4\] {
  -5: -4;
}

.\[dt1\:dt4\] {
  dt1: dt4;
}

.\[-1\:3\] {
  -1: 3;
}

.\[idx1\:idx2\] {
  idx1: idx2;
}

.\[-2\:2\] {
  -2: 2;
}

.\[-3\:-1\] {
  -3: -1;
}

.\[last\:start\] {
  last: start;
}

.selection\:text-white *::-moz-selection {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.selection\:text-white *::selection {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.selection\:text-white::-moz-selection {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.selection\:text-white::selection {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.file\:text-white::file-selector-button {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.hover\:border:hover {
  border-width: 1px;
}

.hover\:border-white:hover {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.hover\:bg-indigo-700:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(67 56 202 / var(--tw-bg-opacity));
}

.hover\:opacity-\[0\.5\]:hover {
  opacity: 0.5;
}

.hover\:opacity-50:hover {
  opacity: 0.5;
}

.hover\:sidebarItemActive:hover {
  background: rgba(255, 136, 0, 0.324);
  border: 1px solid rgba(255, 138, 0, 0.3);
  box-shadow: 0px 0px 33px -8px rgba(255, 138, 0, 0.46);
  border-radius: 12px;
  padding: 5px;
  text-decoration:none;
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-indigo-500:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(99 102 241 / var(--tw-ring-opacity));
}

.focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}

.dark .dark\:border-\[rgba\(112\2c 112\2c 112\2c 0\.9\)\] {
  border-color: rgba(112,112,112,0.9);
}

.dark .dark\:border-\[rgba\(230\2c 230\2c 230\2c 0\.5\)\] {
  border-color: rgba(230,230,230,0.5);
}

.dark .dark\:border-\[rgba\(105\2c 105\2c 105\2c 0\.5\)\] {
  border-color: rgba(105,105,105,0.5);
}

.dark .dark\:bg-\[\#363636\] {
  --tw-bg-opacity: 1;
  background-color: rgb(54 54 54 / var(--tw-bg-opacity));
}

.dark .dark\:bg-\[\#363636a8\] {
  background-color: #363636a8;
}

.dark .dark\:bg-\[\#2A2A2A\] {
  --tw-bg-opacity: 1;
  background-color: rgb(42 42 42 / var(--tw-bg-opacity));
}

.dark .dark\:bg-\[rgba\(48\2c 48\2c 48\2c 0\.9\)\] {
  background-color: rgba(48,48,48,0.9);
}

.dark .dark\:bg-\[\#36363690\] {
  background-color: #36363690;
}

.dark .dark\:bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.dark .dark\:bg-\[rgba\(61\2c 61\2c 61\2c 0\.9\)\] {
  background-color: rgba(61,61,61,0.9);
}

.dark .dark\:bg-\[rgba\(200\2c 200\2c 200\2c 0\.2\)\] {
  background-color: rgba(200,200,200,0.2);
}

.dark .dark\:text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.dark .dark\:text-white\/70 {
  color: rgb(255 255 255 / 0.7);
}

.dark .dark\:placeholder-\[rgba\(200\2c 200\2c 200\2c 0\.5\)\]::-moz-placeholder {
  color: rgba(200,200,200,0.5);
}

.dark .dark\:placeholder-\[rgba\(200\2c 200\2c 200\2c 0\.5\)\]::placeholder {
  color: rgba(200,200,200,0.5);
}

.dark .dark\:placeholder-white::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(255 255 255 / var(--tw-placeholder-opacity));
}

.dark .dark\:placeholder-white::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(255 255 255 / var(--tw-placeholder-opacity));
}

.dark .dark\:invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.dark .dark\:invert-0 {
  --tw-invert: invert(0);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.dark .dark\:white {
  color: white !important;
}

.dark .dark\:darkChart tspan,.dark .dark\:darkChart span{
  fill: rgba(255, 255, 255, 0.661);
  color: rgba(255, 255, 255, 0.661) !important;
}

.dark .dark\:darkChart line{
  stroke: rgba(255, 255, 255, 0.246);
}

@media (min-width: 640px) {
  .sm\:mx-6 {
    margin-left: 1.5rem;
    margin-right: 1.5rem;
  }
}

@media (min-width: 1024px) {
  .lg\:mx-20 {
    margin-left: 5rem;
    margin-right: 5rem;
  }

  .lg\:block {
    display: block;
  }

  .lg\:w-96 {
    width: 24rem;
  }

  .lg\:flex-none {
    flex: none;
  }
}

@media (min-width: 1280px) {
  .xl\:mx-24 {
    margin-left: 6rem;
    margin-right: 6rem;
  }
}

.\[\&\>div\]\:rounded-md>div {
  border-radius: 0.375rem;
}

.dark .dark\:\[\&\>li\>a\.page-link\]\:border-\[rgba\(88\2c 88\2c 88\2c 0\.5\)\]>li>a.page-link {
  border-color: rgba(88,88,88,0.5);
}

.dark .dark\:\[\&\>li\>a\.page-link\]\:bg-\[rgba\(74\2c 74\2c 74\2c 0\.5\)\]>li>a.page-link {
  background-color: rgba(74,74,74,0.5);
}

.dark .dark\:\[\&\>li\>a\.page-link\]\:white>li>a.page-link {
  color: white !important;
}
